# use the official rust image, based on debian
# see https://hub.docker.com/_/rust
image: rust:1.21-stretch

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:latest
  DOCKER_HOST: tcp://localhost:2375


stages:
- build
- check
- package
- deploy

services:
  - dcr.buyme360.com/devops/docker:dind

cache:
  untracked: true
  paths:
    # need this or else untracked files will not be regarded
    - /root/.cargo

build:
  stage: build
  script:
    - cargo build
    - cargo build --release
  artifacts:
    paths:
      - target/debug/blockscape
      - target/release/blockscape
    expire_in: 2 days

  # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time

pages:
  stage: deploy
  script:
    - cargo doc
    - mkdir public
    - cp -R target/doc/* public
  artifacts:
    paths:
      - public
  only:
    - master

# run tests using the binary built before
test:
  stage: check
  script:
    - cargo test
    - cargo test -p blockscape_core
  
package:
  image: dcr.buyme360.com/devops/docker:latest
  stage: package
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  dependencies:
    - build
    
deploy:
  image: dcr.buyme360.com/devops/kube-deploy:latest
  stage: deploy
  only:
  - daniel-spike
  tags:
    - blockscape
  script:
    - cd kube
    - create_kubeconfig
    - apply_template namespace.yaml
    - apply_template blockscape-client-0.yaml
    - apply_template blockscape-client-1.yaml
  environment:
    name: staging
    url: https://explore.blockscape.xram.co
