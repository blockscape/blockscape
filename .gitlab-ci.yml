# use the official rust image, based on debian
# see https://hub.docker.com/_/rust
image: dcr.buyme360.com/plu-capstone/rust:latest

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  ARM_IMAGE_TAG: $CI_REGISTRY_IMAGE/arm:$CI_COMMIT_REF_SLUG
  DOCKER_HOST: tcp://localhost:2375
  CARGO_HOME: $CI_PROJECT_DIR/cargo

stages:
- build
- check
- package
- deploy

services:
  - dcr.buyme360.com/devops/docker:dind

build:
  stage: build
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - cargo/
      - target/
  script:
    # Build all deps so we do not count those errors against
    - cargo build --release 2>&1 | tee log.txt
    #- "! grep 'warning' log.txt"
  artifacts:
    paths:
      - target/release/blockscape
    expire_in: 2 days

  # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time

build_arm:
  image: dcr.buyme360.com/plu-capstone/rust/arm:latest
  stage: build
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-arm"
    paths:
      - cargo/
      - target/
  script:
    - mkdir cargo
    - cp /root/.cargo/config cargo
    - cargo build --release --verbose 2>&1 | tee log.txt
  artifacts:
    paths:
      - target/arm-unknown-linux-musleabi/release/blockscape
    expire_in: 2 days


#pages:
#  stage: deploy
#  cache:
#    key: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
#    paths:
#      - cargo/
#      - target/
#  script:
#    - cargo doc
#    - mkdir public
#    - cp -R target/doc/* public
#  artifacts:
#    paths:
#      - public
#  only:
#    - master

# run tests using the binary built before
test:
  stage: check
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - cargo/
      - target/
  script:
    - cargo test
    - cargo test -p blockscape_core
  
package:
  image: dcr.buyme360.com/devops/docker:latest
  stage: package
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $IMAGE_TAG --build-arg RELEASE=release .
    - docker push $IMAGE_TAG
  dependencies:
    - build

package_arm:
  image: dcr.buyme360.com/devops/docker:latest
  stage: package
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $IMAGE_TAG -f Dockerfile.slim --build-arg RELEASE=arm-unknown-linux-musleabi/release .
    - docker push $ARM_IMAGE_TAG
  dependencies:
    - build_arm
    
deploy:
  image: dcr.buyme360.com/devops/kube-deploy:latest
  stage: deploy
  tags:
    - blockscape
  script:
    - cd kube
    - create_kubeconfig
    - kubectl version
    - kubectl get po -n blockscape
    - apply_template blockscape-client-0.yaml
    - apply_template blockscape-client-1.yaml
    - apply_template explorer.yaml
    - apply_template ingress.yaml
  environment:
    name: staging/$CI_COMMIT_REF_NAME
    url: https://explore-$CI_COMMIT_REF_SLUG.blockscape.xram.co
    on_stop: stop_deploy

stop_deploy:
  image: dcr.buyme360.com/devops/kube-deploy:latest
  stage: deploy
  tags:
    - blockscape
  script:
    - cd kube
    - create_kubeconfig
    - kubectl version
    - delete_template blockscape-client-0.yaml
    - delete_template blockscape-client-1.yaml
    - delete_template explorer.yaml
    - delete_template ingress.yaml
  when: manual
  environment:
    name: staging/$CI_COMMIT_REF_NAME
    action: stop
    #url: https://explore-$CI_COMMIT_REF_SLUG.blockscape.xram.co
